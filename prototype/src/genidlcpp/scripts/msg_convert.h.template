@###############################################
@#
@# Conversion functions between a ROS message
@# and DDS message
@#
@# EmPy template for <msg>_convert.h files
@#
@###############################################

#ifndef __@(spec.package)__@(spec.short_name)__convert__h__
#define __@(spec.package)__@(spec.short_name)__convert__h__

#include "@(spec.package)/@(spec.short_name).h"
#include "@(spec.package)/dds_impl/@(spec.short_name)_.h"
#include "@(spec.package)/dds_impl/@(spec.short_name)_Dcps_impl.h"

#include "genidlcpp/resolver.h"

namespace dds_impl
{

void convert_ros_message_to_dds(const @(spec.package)::@(spec.short_name)& ros_message, @(spec.package)::dds_impl::@(spec.short_name)_& dds_message);

void convert_dds_message_to_ros(const @(spec.package)::dds_impl::@(spec.short_name)_& dds_message, @(spec.package)::@(spec.short_name)& ros_message);

template<>
struct DDSTypeResolver<@(spec.package)::@(spec.short_name)>
{
  typedef @(spec.package)::dds_impl::@(spec.short_name)_ DDSMsgType;
  typedef @(spec.package)::dds_impl::@(spec.short_name)_TypeSupport DDSMsgTypeSupportType;
  typedef @(spec.package)::dds_impl::@(spec.short_name)_DataWriter DDSMsgDataWriterType;
};

}; // namespace dds_impl

#endif
